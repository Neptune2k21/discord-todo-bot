const dataManager = require('../dataManager');
const { EmbedBuilder } = require('discord.js');

module.exports = {
    name: 'list',
    description: 'Afficher la liste des tÃ¢ches',
    execute(message, args) {
        try {
            const tasks = dataManager.getUserTasks(
                message.author.id,
                message.guild.id
            ).sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));
            
            if (tasks.length === 0) {
                return message.reply('Vous n\'avez pas de tÃ¢ches Ã  faire.');
            }

            const embed = new EmbedBuilder()
                .setColor('#0099ff')
                .setTitle('ğŸ“‹ Votre Liste de TÃ¢ches')
                .setAuthor({ name: message.author.username, iconURL: message.author.displayAvatarURL() })
                .setTimestamp();
            
            tasks.forEach((task, index) => {
                let status = 'â¬œ Ã€ faire';
                if (task.status === 'in_progress') status = 'ğŸ”„ En cours';
                else if (task.status === 'completed') status = 'âœ… TerminÃ©e';
                
                let assignedInfo = '';
                if (task.assignedTo) {
                    const assignedUser = message.guild.members.cache.get(task.assignedTo);
                    assignedInfo = assignedUser ? `\nAssignÃ©e Ã : ${assignedUser.user.username}` : '';
                }
                
                const createdDate = new Date(task.createdAt).toLocaleDateString('fr-FR');
                embed.addFields({ 
                    name: `${index + 1}. ${task.description}`, 
                    value: `Statut: ${status}${assignedInfo}\nCrÃ©Ã©e le ${createdDate}` 
                });
            });

            message.channel.send({ embeds: [embed] });
        } catch (error) {
            console.error(error);
            return message.reply('Une erreur est survenue lors de la rÃ©cupÃ©ration de vos tÃ¢ches.');
        }
    }
};